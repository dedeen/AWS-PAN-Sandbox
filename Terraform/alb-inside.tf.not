#  Terraform to create interior ALB in front of web servers. Traffic is routed from the Internet, to 
#      the exterior ALB, through PAN firewalls, through TGW to this ALB. From here, the traffic goes to teh 
#      web servers.  
#           dan edeen, dan@dsblue.net, 2023 
#
# create the ALB
resource "aws_lb" "ALB-inside" {
  name                                = "ALB-inside"
  internal                            = true
  load_balancer_type                  = "application"
  enable_cross_zone_load_balancing    = true
  ip_address_type                     = "ipv4"
  security_groups                     = [aws_security_group.SG-Interior-Web.id]
  subnets                             = [module.vpc["websrvvpc"].intra_subnets[0],module.vpc["websrvvpc"].intra_subnets[3]]
                                                                           # subnets: 0:websrv-az1-inst, 3:websrv-az2-inst
  tags = {
    Owner = "dan-via-terraform"
    Name  = "ALB-inside"
  }
} 

# create the ALB target group for http
resource "aws_lb_target_group" "ALB-inside-TG-Group80" {
  name                    = "ALB-inside-TG-Group80"
  port                    = 80
  protocol                = "HTTP"
  target_type             = "ip"
  vpc_id                  = module.vpc["websrvvpc"].vpc_id
 
  health_check {
    enabled               = true
    matcher               = 200
    path                  = "/"
    port                  = "traffic-port" 
    protocol              = "HTTP"
    timeout               = 5
    healthy_threshold     = 5
    unhealthy_threshold   = 2
    interval              = 10 
  }
    
  tags = {
    Owner = "dan-via-terraform"
    Name  = "ALB-inside-TG-80"
  }
}
#
# create the ALB target group for https
resource "aws_lb_target_group" "ALB-inside-TG-Group443" {
  name                    = "ALB-inside-TG-Group443"
  port                    = 443
  protocol                = "HTTPS"
  target_type             = "ip"
  vpc_id                  = module.vpc["websrvvpc"].vpc_id
 
  health_check {
    enabled               = true
    matcher               = 200
    path                  = "/"
    port                  = "traffic-port"
    protocol              = "HTTPS"
    timeout               = 5
    healthy_threshold     = 5
    unhealthy_threshold   = 2
    interval              = 10 
  }
    
  tags = {
    Owner = "dan-via-terraform"
    Name  = "ALB-inside-TG-443"
  }
}
#

# create http/80 listener for the inside ALB
resource "aws_lb_listener" "ALB-inside-Listener-80" {
  load_balancer_arn       = aws_lb.ALB-inside.arn
  port                    = 80
  protocol                = "HTTP"
  
  default_action {
    type                  = "forward"
    target_group_arn      = aws_lb_target_group.ALB-inside-TG-Group80.arn 
  }
}  

# create https/443 listener for the inside ALB
resource "aws_lb_listener" "ALB-inside-Listener-443" {
  load_balancer_arn       = aws_lb.ALB-inside.arn
  port                    = 443
  protocol                = "HTTPS"
  ssl_policy              = "ELBSecurityPolicy-TLS13-1-2-2021-06"
  certificate_arn         = "arn:aws:acm:us-west-2:500112433998:certificate/184ed2a9-df40-40c0-90c0-b5974c00f409"
  
  default_action {
    type                  = "forward"
    target_group_arn      = aws_lb_target_group.ALB-inside-TG-Group443.arn 
  }
}  

# register internal web servers with target groups for ALB-inside
#
resource "aws_lb_target_group_attachment" "websrv1-target-p80" {
  target_group_arn = aws_lb_target_group.ALB-inside-TG-Group80.arn
  target_id        = "10.110.0.30"
  port             = 80
}

resource "aws_lb_target_group_attachment" "websrv3-target-p80" {
  target_group_arn = aws_lb_target_group.ALB-inside-TG-Group80.arn
  target_id        = "10.110.128.30"
  port             = 80
}

resource "aws_lb_target_group_attachment" "websrv2-target-p443" {
  target_group_arn = aws_lb_target_group.ALB-inside-TG-Group443.arn
  target_id        = "10.110.0.40"
  port             = 443
}

resource "aws_lb_target_group_attachment" "websrv4-target-p443" {
  target_group_arn = aws_lb_target_group.ALB-inside-TG-Group443.arn
  target_id        = "10.110.128.40"
  port             = 443
}

####
  
