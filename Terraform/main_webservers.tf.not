#  Terraform to create a EC2s that will serve as webservers to the outside world
#      The servers are split across AZs in the VPC (az1, az2), and further divided 
#      by http (port 80) an https (port 443). Traffic will be steered to the appropriate 
#      port group by the external ALB. 

resource "aws_instance" "websrv1-p80-az1" {
  ami                                 = "ami-094125af156557ca2"
  instance_type                       = "t2.micro"
  key_name                            = "${aws_key_pair.generated_key.key_name}"
  associate_public_ip_address         = false
  private_ip                          = "10.110.0.30"
  subnet_id                           = module.vpc["websrvvpc"].intra_subnets[0]           	# subnet=websrv-az1-inst
  iam_instance_profile                = aws_iam_instance_profile.ec2_profile.id   		# Allow instance access to S3
  vpc_security_group_ids              = [aws_security_group.SG-allow_ipv4["websrvvpc"].id]  
  user_data = <<EOF
		#!/bin/bash
		sudo yum update -y
    		sudo amazon-linux-extras install php8.0 mariadb10.5 -y
		sudo yum install -y httpd
		sudo systemctl start httpd
		sudo systemctl enable httpd
		aws s3 cp s3://webserver-s3-ds/scripts/getmetadata.sh /var/www/html/
		aws s3 cp s3://webserver-s3-ds/HTML-80/index.html /var/www/html/
		aws s3 cp s3://webserver-s3-ds/HTML-80/panlogo.png /var/www/html/
		sudo chmod 755 /var/www/html/getmetadata.sh
		sudo /var/www/html/getmetadata.sh
	EOF
  source_dest_check                   = true
  tags = {
          Owner = "dan-via-terraform"
          Name  = "websrv1-p80-az1"
    }
}

resource "aws_instance" "websrv2-p443-az1" {
  ami                                 = "ami-094125af156557ca2"
  instance_type                       = "t2.micro"
  key_name                            = "${aws_key_pair.generated_key.key_name}"
  associate_public_ip_address         = false
  private_ip                          = "10.110.0.40"
  subnet_id                           = module.vpc["websrvvpc"].intra_subnets[0]           	# subnet=websrv-az1-inst
  iam_instance_profile                = aws_iam_instance_profile.ec2_profile.id   		# Allow instance access to S3
  vpc_security_group_ids              = [aws_security_group.SG-allow_ipv4["websrvvpc"].id]
   user_data = <<EOF
		#!/bin/bash
		sudo yum update -y
    		sudo amazon-linux-extras install php8.0 mariadb10.5 -y
		sudo yum install -y httpd
		sudo systemctl start httpd
		sudo systemctl enable httpd
		aws s3 cp s3://webserver-s3-ds/scripts/getmetadata_black.sh /var/www/html/getmetadata.sh
		aws s3 cp s3://webserver-s3-ds/HTML-443/index.html /var/www/html/
		aws s3 cp s3://webserver-s3-ds/HTML-443/panlogo.png /var/www/html/
		sudo chmod 755 /var/www/html/getmetadata.sh
		sudo /var/www/html/getmetadata.sh
		sudo yum install -y mod_ssl
		cd /etc/pki/tls/certs
		sudo ./make-dummy-cert localhost.crt
		aws s3 cp s3://webserver-s3-ds/HTML-443/ssl.conf /etc/httpd/conf.d/ssl.conf
		aws s3 cp s3://webserver-s3-ds/HTML-443/httpd.conf /etc/httpd/conf/httpd.conf
		sudo systemctl restart httpd
	EOF
  source_dest_check                   = true
  tags = {
          Owner = "dan-via-terraform"
          Name  = "websrv2-p443-az1"
    }
}

resource "aws_instance" "websrv3-p80-az2" {
  ami                                 = "ami-094125af156557ca2"
  instance_type                       = "t2.micro"
  key_name                            = "${aws_key_pair.generated_key.key_name}"
  associate_public_ip_address         = false
  private_ip                          = "10.110.128.30"
  subnet_id                           = module.vpc["websrvvpc"].intra_subnets[3]           	# subnet=websrv-az2-inst
  iam_instance_profile                = aws_iam_instance_profile.ec2_profile.id   		# Allow instance access to S3
  vpc_security_group_ids              = [aws_security_group.SG-allow_ipv4["websrvvpc"].id]  
   user_data = <<EOF
		#!/bin/bash
		sudo yum update -y
    		sudo amazon-linux-extras install php8.0 mariadb10.5 -y
		sudo yum install -y httpd
		sudo systemctl start httpd
		sudo systemctl enable httpd
		aws s3 cp s3://webserver-s3-ds/scripts/getmetadata.sh /var/www/html/
		aws s3 cp s3://webserver-s3-ds/HTML-80/index.html /var/www/html/
		aws s3 cp s3://webserver-s3-ds/HTML-80/panlogo.png /var/www/html/
		sudo chmod 755 /var/www/html/getmetadata.sh
		sudo /var/www/html/getmetadata.sh
	EOF
  source_dest_check                   = true
  tags = {
          Owner = "dan-via-terraform"
          Name  = "websrv3-p80-az2"
    }
}



resource "aws_instance" "websrv4-p443-az2" {
  ami                                 = "ami-094125af156557ca2"
  instance_type                       = "t2.micro"
  key_name                            = "${aws_key_pair.generated_key.key_name}"
  associate_public_ip_address         = false
  private_ip                          = "10.110.128.40"
  subnet_id                           = module.vpc["websrvvpc"].intra_subnets[3]           	# subnet=websrv-az2-inst
  iam_instance_profile                = aws_iam_instance_profile.ec2_profile.id   		# Allow instance access to S3
  vpc_security_group_ids              = [aws_security_group.SG-allow_ipv4["websrvvpc"].id]  
   user_data = <<EOF
		#!/bin/bash
		sudo yum update -y
    		sudo amazon-linux-extras install php8.0 mariadb10.5 -y
		sudo yum install -y httpd
		sudo systemctl start httpd
		sudo systemctl enable httpd
		aws s3 cp s3://webserver-s3-ds/scripts/getmetadata_black.sh /var/www/html/getmetadata.sh
		aws s3 cp s3://webserver-s3-ds/HTML-443/index.html /var/www/html/
		aws s3 cp s3://webserver-s3-ds/HTML-443/panlogo.png /var/www/html/
		sudo chmod 755 /var/www/html/getmetadata.sh
		sudo /var/www/html/getmetadata.sh
		sudo yum install -y mod_ssl
		cd /etc/pki/tls/certs
		sudo ./make-dummy-cert localhost.crt
		aws s3 cp s3://webserver-s3-ds/HTML-443/ssl.conf /etc/httpd/conf.d/ssl.conf
		aws s3 cp s3://webserver-s3-ds/HTML-443/httpd.conf /etc/httpd/conf/httpd.conf
		sudo systemctl restart httpd
	EOF
  source_dest_check                   = true
  tags = {
          Owner = "dan-via-terraform"
          Name  = "websrv4-p443-az2"
    }
}

